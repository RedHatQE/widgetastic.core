name: üïµÔ∏è Test suite

on:
  push:
  pull_request:
    types: ["opened", "synchronize", "reopened"]
  schedule:
    # Run every Friday at 23:59 UTC
    - cron: 59 23 * * 5

jobs:
  codechecks:
    name: üìÉ Code quality [pre-commit]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Pre Commit Checks
        uses: pre-commit/action@v2.0.0

      - name: Analysis (git diff)
        if: failure()
        run: git diff

  unit-tests:
    # Run unit tests on different version of python and browser
    name: üêç Python-${{ matrix.python-version }}-${{ matrix.browser }}
    runs-on: ubuntu-20.04
    needs: [codechecks]
    strategy:
      matrix:
        browser: [ chrome, firefox ]
        python-version: [ pypy3, 3.6, 3.7, 3.8, 3.9 ]

    steps:
      - name: Pull selenium-standalone:latest
        run: podman pull quay.io/redhatqe/selenium-standalone:latest

      - name: Pull docker.io/library/nginx:alpine
        run: podman pull docker.io/library/nginx:alpine

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python-${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: UnitTest - Python-${{ matrix.python-version }}-${{ matrix.browser }}
        env:
          BROWSER: ${{ matrix.browser }}
        run: |
          pip install -U setuptools wheel
          pip install -e .[test]
          pytest -n 3

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.13
        with:
          file: coverage.xml
          flags: unittests
          name: ${{ github.run_id }}-py-${{ matrix.python-version }}-${{ matrix.browser }}

  docs:
    name: Docs Build
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Deps
        run: |
          pip install -U pip setuptools wheel
          pip install .[docs]

      - name: Build Docs
        run: sphinx-build -b html -d build/sphinx-doctrees docs build/htmldocs

      - name: Archive Docs
        uses: actions/upload-artifact@v2
        with:
          name: sphinx-htmldocs
          path: build/htmldocs

  platform:
    # Check package properly install on different platform (dev setup)
    name: üíª Platform-${{ matrix.os }}
    needs: [unit-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Development setup on ${{ matrix.os }}
        run: |
          python -m pip install pip --upgrade
          pip install -e .[dev]
          python -c "import pkg_resources; print(pkg_resources.get_distribution('widgetastic.core').version)"
          python -c "from widgetastic.widget import Widget, Browser"

  package:
    name: ‚öôÔ∏è Build & Verify Package
    needs: [unit-tests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Build and verify with twine
        run: |
          python -m pip install pip --upgrade
          pip install twine setuptools wheel --upgrade
          python setup.py sdist bdist_wheel
          ls -l dist
          python -m twine check dist/*
